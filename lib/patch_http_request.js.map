{"version":3,"sources":["patch_http_request.js"],"names":["HTTP","require","HTTPS","ProxyRequest","Replay","URL","request","options","callback","String","parse","headers","Upgrade","ClientRequest","hostname","host","split","isLocalhost","isPassThrough","chain","start","once","get","cb","req","end"],"mappings":";;AAAA;AACA;AACA;;AAEA,MAAMA,OAAgBC,QAAQ,MAAR,CAAtB;AACA,MAAMC,QAAgBD,QAAQ,OAAR,CAAtB;AACA,MAAME,eAAgBF,QAAQ,SAAR,CAAtB;AACA,MAAMG,SAAgBH,QAAQ,IAAR,CAAtB;AACA,MAAMI,MAAgBJ,QAAQ,KAAR,CAAtB;;AAGA;AACAD,KAAKM,OAAL,GAAe,UAASC,OAAT,EAAkBC,QAAlB,EAA4B;AACzC,MAAI,OAAOD,OAAP,KAAmB,QAAnB,IAA+BA,mBAAmBE,MAAtD,EACEF,UAAUF,IAAIK,KAAJ,CAAUH,OAAV,CAAV;;AAEF;AACA,MAAIA,QAAQI,OAAR,IAAmBJ,QAAQI,OAAR,CAAgBC,OAAhB,KAA4B,WAAnD,EACE,OAAO,IAAIZ,KAAKa,aAAT,CAAuBN,OAAvB,EAAgCC,QAAhC,CAAP;;AAEF,QAAMM,WAAWP,QAAQO,QAAR,IAAqBP,QAAQQ,IAAR,IAAgBR,QAAQQ,IAAR,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAArC,IAAoE,WAArF;AACA,MAAIZ,OAAOa,WAAP,CAAmBH,QAAnB,KAAgCV,OAAOc,aAAP,CAAqBJ,QAArB,CAApC,EACE,OAAO,IAAId,KAAKa,aAAT,CAAuBN,OAAvB,EAAgCC,QAAhC,CAAP;;AAEF;AACA,QAAMF,UAAU,IAAIH,YAAJ,CAAiBI,OAAjB,EAA0BH,OAAOe,KAAP,CAAaC,KAAvC,CAAhB;AACA,MAAIZ,QAAJ,EACEF,QAAQe,IAAR,CAAa,UAAb,EAAyBb,QAAzB;AACF,SAAOF,OAAP;AACD,CAjBD;;AAoBA;AACAN,KAAKsB,GAAL,GAAW,UAASf,OAAT,EAAkBgB,EAAlB,EAAsB;AAC/B,QAAMC,MAAMxB,KAAKM,OAAL,CAAaC,OAAb,EAAsBgB,EAAtB,CAAZ;AACAC,MAAIC,GAAJ;AACA,SAAOD,GAAP;AACD,CAJD;;AAOAtB,MAAMoB,GAAN,GAAYtB,KAAKsB,GAAjB","file":"patch_http_request.js","sourcesContent":["// Patch HTTP.request to make all request go through Replay\n//\n// Patch based on io.js, may not work with Node.js\n\nconst HTTP          = require('http');\nconst HTTPS         = require('https');\nconst ProxyRequest  = require('./proxy');\nconst Replay        = require('./');\nconst URL           = require('url');\n\n\n// Route HTTP requests to our little helper.\nHTTP.request = function(options, callback) {\n  if (typeof options === 'string' || options instanceof String)\n    options = URL.parse(options);\n\n  // WebSocket request: pass through to Node.js library\n  if (options.headers && options.headers.Upgrade === 'websocket')\n    return new HTTP.ClientRequest(options, callback);\n\n  const hostname = options.hostname || (options.host && options.host.split(':')[0]) || 'localhost';\n  if (Replay.isLocalhost(hostname) || Replay.isPassThrough(hostname))\n    return new HTTP.ClientRequest(options, callback);\n\n  // Proxy request\n  const request = new ProxyRequest(options, Replay.chain.start);\n  if (callback)\n    request.once('response', callback);\n  return request;\n};\n\n\n// Patch .get method otherwise it calls original HTTP.request\nHTTP.get = function(options, cb) {\n  const req = HTTP.request(options, cb);\n  req.end();\n  return req;\n}\n\n\nHTTPS.get = HTTP.get;\n\n"]}